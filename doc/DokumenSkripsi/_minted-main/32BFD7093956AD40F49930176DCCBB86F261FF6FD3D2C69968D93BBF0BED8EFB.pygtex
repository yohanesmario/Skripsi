\begin{Verbatim}[commandchars=\\\{\},codes={\catcode`\$=3\catcode`\^=7\catcode`\_=8}]
\PYG{k}{using} \PYG{n+nn}{System}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Collections.Generic}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Diagnostics}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.IO}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Linq}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Net}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Net.Http}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Net.NetworkInformation}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Runtime.Serialization.Json}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Text}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Text.RegularExpressions}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Threading}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{System.Threading.Tasks}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{Windows.Foundation}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{Windows.Foundation.Metadata}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{Windows.Networking.Connectivity}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{Windows.Storage}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{Windows.System.Threading}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{Windows.UI.ViewManagement}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{Windows.UI.Xaml}\PYG{p}{;}
\PYG{k}{using} \PYG{n+nn}{Windows.UI.Xaml.Controls}\PYG{p}{;}

\PYG{k}{namespace} \PYG{n+nn}{WiFiWebAutoLogin.Classes} \PYG{p}{\PYGZob{}}
    \PYG{k}{public} \PYG{k}{class} \PYG{n+nc}{CaptivePortalDetector} \PYG{p}{\PYGZob{}}
        \PYG{k}{private} \PYG{k}{static} \PYG{n}{CaptivePortalDetector} \PYG{n}{instance} \PYG{p}{=} \PYG{k}{null}\PYG{p}{;}
        \PYG{k}{private} \PYG{n}{Storage} \PYG{n}{storage}\PYG{p}{;}
        \PYG{k}{private} \PYG{k+kt}{string} \PYG{n}{ssid}\PYG{p}{;}
        \PYG{k}{private} \PYG{n}{Queue}\PYG{p}{\PYGZlt{}}\PYG{n}{Uri}\PYG{p}{\PYGZgt{}} \PYG{n}{uriQueue}\PYG{p}{;}
        
        \PYG{k}{private} \PYG{n}{WebView} \PYG{n}{webView}\PYG{p}{;}
        \PYG{k}{private} \PYG{n}{TextBlock} \PYG{n}{textBlock}\PYG{p}{;}
        \PYG{k}{private} \PYG{n}{ComboBox} \PYG{n}{comboBox}\PYG{p}{;}

        \PYG{k}{private} \PYG{k+kt}{string} \PYG{n}{currentFingerprint}\PYG{p}{;}
        \PYG{k}{private} \PYG{n}{ActionSequence} \PYG{n}{currentActionSequence}\PYG{p}{;}
        \PYG{k}{private} \PYG{n}{ThreadPoolTimer} \PYG{n}{timer}\PYG{p}{;}

        \PYG{k}{private} \PYG{n+nf}{CaptivePortalDetector}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView} \PYG{p}{=} \PYG{k}{null}\PYG{p}{;}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{storage} \PYG{p}{=} \PYG{k}{new} \PYG{n}{Storage}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}credentials.dat\PYGZdq{}}\PYG{p}{);}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{uriQueue} \PYG{p}{=} \PYG{k}{new} \PYG{n}{Queue}\PYG{p}{\PYGZlt{}}\PYG{n}{Uri}\PYG{p}{\PYGZgt{}();}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k+kt}{bool} \PYG{n+nf}{isSetup}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView} \PYG{p}{!=} \PYG{k}{null}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{setup}\PYG{p}{(}\PYG{n}{WebView} \PYG{n}{webView}\PYG{p}{,} \PYG{n}{TextBlock} \PYG{n}{textBlock}\PYG{p}{,} \PYG{n}{ComboBox} \PYG{n}{comboBox}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView} \PYG{p}{=} \PYG{n}{webView}\PYG{p}{;}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{textBlock} \PYG{p}{=} \PYG{n}{textBlock}\PYG{p}{;}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{comboBox} \PYG{p}{=} \PYG{n}{comboBox}\PYG{p}{;}

            \PYG{k}{this}\PYG{p}{.}\PYG{n}{refreshList}\PYG{p}{();}

            \PYG{k}{this}\PYG{p}{.}\PYG{n}{updateSSID}\PYG{p}{();}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{updateWebView}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{refreshList}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{n}{comboBox}\PYG{p}{.}\PYG{n}{ItemsSource} \PYG{p}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n}{storage}\PYG{p}{.}\PYG{n}{getLoginInfo}\PYG{p}{().}\PYG{n}{getList}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{n}{WebView} \PYG{n+nf}{getWebView}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{updateWebView}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{ssid} \PYG{p}{!=} \PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{c+c1}{// CONNECTED}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{Navigate}\PYG{p}{(}\PYG{k}{new} \PYG{n}{Uri}\PYG{p}{(}\PYG{n}{Conf}\PYG{p}{.}\PYG{n}{uri}\PYG{p}{));}
            \PYG{p}{\PYGZcb{}}
            \PYG{k}{else} \PYG{p}{\PYGZob{}}
                \PYG{c+c1}{// DISCONNECTED}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{displayMessage}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Check your network connection.\PYGZdq{}}\PYG{p}{);}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{static} \PYG{k}{async} \PYG{n}{Task}\PYG{p}{\PYGZlt{}}\PYG{n}{CaptivePortalDetector}\PYG{p}{\PYGZgt{}} \PYG{n}{getInstance}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{instance}\PYG{p}{==}\PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{instance} \PYG{p}{=} \PYG{k}{new} \PYG{n}{CaptivePortalDetector}\PYG{p}{();}
                \PYG{k}{await} \PYG{n}{instance}\PYG{p}{.}\PYG{n}{storage}\PYG{p}{.}\PYG{n}{setup}\PYG{p}{();}
            \PYG{p}{\PYGZcb{}}
            \PYG{k}{return} \PYG{n}{instance}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{async} \PYG{k}{void} \PYG{n+nf}{onLoad}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{ssid}\PYG{p}{!=}\PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{c+c1}{// GET FINGERPRINT}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{currentFingerprint} \PYG{p}{=} \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{getFingerprint}\PYG{p}{();}
                \PYG{k+kt}{string} \PYG{n}{body} \PYG{p}{=} \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{getBody}\PYG{p}{();}

                \PYG{k}{this}\PYG{p}{.}\PYG{n}{currentActionSequence} \PYG{p}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n}{storage}\PYG{p}{.}\PYG{n}{getLoginInfo}\PYG{p}{().}\PYG{n}{getActionSequence}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{currentFingerprint}\PYG{p}{);}
                \PYG{k+kt}{bool} \PYG{n}{hasActionSequence} \PYG{p}{=} \PYG{k}{true}\PYG{p}{;}
                \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{currentActionSequence} \PYG{p}{==} \PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                    \PYG{n}{hasActionSequence} \PYG{p}{=} \PYG{k}{false}\PYG{p}{;}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{currentActionSequence} \PYG{p}{=} \PYG{k}{new} \PYG{n}{ActionSequence}\PYG{p}{();}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{storage}\PYG{p}{.}\PYG{n}{getLoginInfo}\PYG{p}{().}\PYG{n}{addActionSequence}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{currentFingerprint}\PYG{p}{,} \PYG{k}{this}\PYG{p}{.}\PYG{n}{currentActionSequence}\PYG{p}{);}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{storage}\PYG{p}{.}\PYG{n}{saveData}\PYG{p}{();}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{refreshList}\PYG{p}{();}
                \PYG{p}{\PYGZcb{}}

                \PYG{k}{if} \PYG{p}{(!}\PYG{n}{body}\PYG{p}{.}\PYG{n}{Trim}\PYG{p}{().}\PYG{n}{Equals}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}connected\PYGZdq{}}\PYG{p}{))} \PYG{p}{\PYGZob{}}
                    \PYG{c+c1}{// Not Connected}

                    \PYG{k}{if} \PYG{p}{(}\PYG{n}{hasActionSequence}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                        \PYG{k}{this}\PYG{p}{.}\PYG{n}{displayMessage}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Executing recorded actions...\PYGZbs{}r\PYGZbs{}n\PYGZbs{}r\PYGZbs{}n\PYGZdq{}} \PYG{p}{+} \PYG{l+s}{\PYGZdq{}(\PYGZdq{}} \PYG{p}{+} \PYG{k}{this}\PYG{p}{.}\PYG{n}{currentFingerprint}\PYG{p}{.}\PYG{n}{Split}\PYG{p}{(}\PYG{k}{new} \PYG{k+kt}{string}\PYG{p}{[]} \PYG{p}{\PYGZob{}} \PYG{n}{Conf}\PYG{p}{.}\PYG{n}{separator} \PYG{p}{\PYGZcb{},} \PYG{n}{StringSplitOptions}\PYG{p}{.}\PYG{n}{RemoveEmptyEntries}\PYG{p}{)[}\PYG{l+m}{1}\PYG{p}{]} \PYG{p}{+} \PYG{l+s}{\PYGZdq{})\PYGZdq{}}\PYG{p}{);}
                    \PYG{p}{\PYGZcb{}}

                    \PYG{n}{IEnumerable}\PYG{p}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{\PYGZgt{}} \PYG{n}{actions} \PYG{p}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n}{currentActionSequence}\PYG{p}{.}\PYG{n}{getEnumerable}\PYG{p}{();}
                    \PYG{k+kt}{string} \PYG{n}{compiledActions} \PYG{p}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
                    \PYG{k}{foreach} \PYG{p}{(}\PYG{k+kt}{string} \PYG{n}{action} \PYG{k}{in} \PYG{n}{actions}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                        \PYG{n}{compiledActions} \PYG{p}{+=} \PYG{n}{action}\PYG{p}{;}
                    \PYG{p}{\PYGZcb{}}
                    \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{InvokeScriptAsync}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}eval\PYGZdq{}}\PYG{p}{,} \PYG{k}{new} \PYG{k+kt}{string}\PYG{p}{[]} \PYG{p}{\PYGZob{}} \PYG{n}{compiledActions} \PYG{p}{\PYGZcb{});}

                    \PYG{c+c1}{// Deploy Listeners}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{deployListeners}\PYG{p}{();}
                    \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{uriQueue}\PYG{p}{.}\PYG{n}{Count} \PYG{p}{\PYGZgt{}} \PYG{l+m}{0}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                        \PYG{k}{this}\PYG{p}{.}\PYG{n}{startTimer}\PYG{p}{();}
                    \PYG{p}{\PYGZcb{}}

                    \PYG{k}{if} \PYG{p}{(!}\PYG{n}{hasActionSequence}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                        \PYG{k}{this}\PYG{p}{.}\PYG{n}{displayWebView}\PYG{p}{();}
                    \PYG{p}{\PYGZcb{}}
                    \PYG{k}{else} \PYG{p}{\PYGZob{}}
                        \PYG{k}{this}\PYG{p}{.}\PYG{n}{startRetryTimer}\PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{currentFingerprint}\PYG{p}{);}
                    \PYG{p}{\PYGZcb{}}
                \PYG{p}{\PYGZcb{}}
                \PYG{k}{else} \PYG{p}{\PYGZob{}}
                    \PYG{c+c1}{// Connected}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{displayMessage}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Connected.\PYGZdq{}}\PYG{p}{);}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{uriQueue}\PYG{p}{.}\PYG{n}{Clear}\PYG{p}{();}
                \PYG{p}{\PYGZcb{}}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{navigationStarting}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{timer}\PYG{p}{!=}\PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{timer}\PYG{p}{.}\PYG{n}{Cancel}\PYG{p}{();}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{timer} \PYG{p}{=} \PYG{k}{null}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{void} \PYG{n+nf}{startRetryTimer}\PYG{p}{(}\PYG{k+kt}{string} \PYG{n}{oldFingerprint}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{ThreadPoolTimer}\PYG{p}{.}\PYG{n}{CreateTimer}\PYG{p}{(}\PYG{k}{async} \PYG{p}{(}\PYG{n}{source}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
                \PYG{k}{await} \PYG{n}{Windows}\PYG{p}{.}\PYG{n}{ApplicationModel}\PYG{p}{.}\PYG{n}{Core}\PYG{p}{.}\PYG{n}{CoreApplication}\PYG{p}{.}\PYG{n}{MainView}\PYG{p}{.}\PYG{n}{CoreWindow}\PYG{p}{.}\PYG{n}{Dispatcher}\PYG{p}{.}\PYG{n}{RunAsync}\PYG{p}{(}\PYG{n}{Windows}\PYG{p}{.}\PYG{n}{UI}\PYG{p}{.}\PYG{n}{Core}\PYG{p}{.}\PYG{n}{CoreDispatcherPriority}\PYG{p}{.}\PYG{n}{Normal}\PYG{p}{,} \PYG{p}{()} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
                    \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{currentFingerprint}\PYG{p}{.}\PYG{n}{Equals}\PYG{p}{(}\PYG{n}{oldFingerprint}\PYG{p}{))} \PYG{p}{\PYGZob{}}
                        \PYG{k}{this}\PYG{p}{.}\PYG{n}{displayWebView}\PYG{p}{();}
                    \PYG{p}{\PYGZcb{}}
                \PYG{p}{\PYGZcb{});}
            \PYG{p}{\PYGZcb{},} \PYG{n}{TimeSpan}\PYG{p}{.}\PYG{n}{FromSeconds}\PYG{p}{(}\PYG{l+m}{5}\PYG{p}{));}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{async} \PYG{k}{void} \PYG{n+nf}{timerCallback}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{await} \PYG{n}{Windows}\PYG{p}{.}\PYG{n}{ApplicationModel}\PYG{p}{.}\PYG{n}{Core}\PYG{p}{.}\PYG{n}{CoreApplication}\PYG{p}{.}\PYG{n}{MainView}\PYG{p}{.}\PYG{n}{CoreWindow}\PYG{p}{.}\PYG{n}{Dispatcher}\PYG{p}{.}\PYG{n}{RunAsync}\PYG{p}{(}\PYG{n}{Windows}\PYG{p}{.}\PYG{n}{UI}\PYG{p}{.}\PYG{n}{Core}\PYG{p}{.}\PYG{n}{CoreDispatcherPriority}\PYG{p}{.}\PYG{n}{Normal}\PYG{p}{,} \PYG{p}{()} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
                \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{timer}\PYG{p}{!=}\PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{timer} \PYG{p}{=} \PYG{k}{null}\PYG{p}{;}
                \PYG{p}{\PYGZcb{}}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{dequeueUri}\PYG{p}{();}
            \PYG{p}{\PYGZcb{});}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{async} \PYG{k}{void} \PYG{n+nf}{deployListeners}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{n}{StorageFolder} \PYG{n}{InstallationFolder} \PYG{p}{=} \PYG{n}{Windows}\PYG{p}{.}\PYG{n}{ApplicationModel}\PYG{p}{.}\PYG{n}{Package}\PYG{p}{.}\PYG{n}{Current}\PYG{p}{.}\PYG{n}{InstalledLocation}\PYG{p}{;}
            \PYG{n}{StorageFile} \PYG{n}{file} \PYG{p}{=} \PYG{k}{await} \PYG{n}{InstallationFolder}\PYG{p}{.}\PYG{n}{GetFileAsync}\PYG{p}{(}\PYG{l+s}{@\PYGZdq{}JavaScript\PYGZbs{}DeployListeners.js\PYGZdq{}}\PYG{p}{);}
            \PYG{k+kt}{string} \PYG{n}{js} \PYG{p}{=} \PYG{k}{await} \PYG{n}{FileIO}\PYG{p}{.}\PYG{n}{ReadTextAsync}\PYG{p}{(}\PYG{n}{file}\PYG{p}{);}
            \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{InvokeScriptAsync}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}eval\PYGZdq{}}\PYG{p}{,} \PYG{k}{new} \PYG{k+kt}{string}\PYG{p}{[]} \PYG{p}{\PYGZob{}} \PYG{n}{js} \PYG{p}{\PYGZcb{});}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{async} \PYG{n}{Task}\PYG{p}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{\PYGZgt{}} \PYG{n}{getFingerprint}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k+kt}{string} \PYG{n}{uri} \PYG{p}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
            \PYG{k+kt}{string} \PYG{n}{title} \PYG{p}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{try} \PYG{p}{\PYGZob{}}
                \PYG{n}{uri} \PYG{p}{=} \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{InvokeScriptAsync}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}eval\PYGZdq{}}\PYG{p}{,} \PYG{k}{new} \PYG{k+kt}{string}\PYG{p}{[]} \PYG{p}{\PYGZob{}} \PYG{l+s}{\PYGZdq{}window.location.href;\PYGZdq{}} \PYG{p}{\PYGZcb{});}
                \PYG{n}{title} \PYG{p}{=} \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{InvokeScriptAsync}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}eval\PYGZdq{}}\PYG{p}{,} \PYG{k}{new} \PYG{k+kt}{string}\PYG{p}{[]} \PYG{p}{\PYGZob{}} \PYG{l+s}{\PYGZdq{}document.getElementsByTagName(\PYGZbs{}\PYGZdq{}title\PYGZbs{}\PYGZdq{})[0].innerHTML.trim();\PYGZdq{}} \PYG{p}{\PYGZcb{});}
            \PYG{p}{\PYGZcb{}} \PYG{k}{catch} \PYG{p}{(}\PYG{n}{Exception} \PYG{n}{e}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{p}{\PYGZcb{}}
            \PYG{k}{return} \PYG{k}{this}\PYG{p}{.}\PYG{n}{ssid} \PYG{p}{+} \PYG{n}{Conf}\PYG{p}{.}\PYG{n}{separator} \PYG{p}{+} \PYG{n}{uri} \PYG{p}{+} \PYG{n}{Conf}\PYG{p}{.}\PYG{n}{separator} \PYG{p}{+} \PYG{n}{title}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{async} \PYG{n}{Task}\PYG{p}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{\PYGZgt{}} \PYG{n}{getUri}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k+kt}{string} \PYG{n}{uri} \PYG{p}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{try} \PYG{p}{\PYGZob{}}
                \PYG{n}{uri} \PYG{p}{=} \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{InvokeScriptAsync}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}eval\PYGZdq{}}\PYG{p}{,} \PYG{k}{new} \PYG{k+kt}{string}\PYG{p}{[]} \PYG{p}{\PYGZob{}} \PYG{l+s}{\PYGZdq{}window.location.href;\PYGZdq{}} \PYG{p}{\PYGZcb{});}
            \PYG{p}{\PYGZcb{}}
            \PYG{k}{catch} \PYG{p}{(}\PYG{n}{Exception} \PYG{n}{e}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{p}{\PYGZcb{}}
            \PYG{k}{return} \PYG{n}{uri}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{async} \PYG{n}{Task}\PYG{p}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{\PYGZgt{}} \PYG{n}{getBody}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{InvokeScriptAsync}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}eval\PYGZdq{}}\PYG{p}{,} \PYG{k}{new} \PYG{k+kt}{string}\PYG{p}{[]} \PYG{p}{\PYGZob{}} \PYG{l+s}{\PYGZdq{}document.body.innerHTML;\PYGZdq{}} \PYG{p}{\PYGZcb{});}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{async} \PYG{n}{Task}\PYG{p}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{\PYGZgt{}} \PYG{n}{getScripts}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{k}{await} \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{InvokeScriptAsync}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}eval\PYGZdq{}}\PYG{p}{,} \PYG{k}{new} \PYG{k+kt}{string}\PYG{p}{[]} \PYG{p}{\PYGZob{}} \PYG{l+s}{\PYGZdq{}document.body.innerHTML;\PYGZdq{}} \PYG{p}{\PYGZcb{});}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{passAction}\PYG{p}{(}\PYG{k+kt}{string} \PYG{n}{args}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{currentActionSequence}\PYG{p}{!=}\PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{currentActionSequence}\PYG{p}{.}\PYG{k}{add}\PYG{p}{(}\PYG{n}{args}\PYG{p}{);}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{storage}\PYG{p}{.}\PYG{n}{saveData}\PYG{p}{();}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{updateSSID}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{n}{ConnectionProfile} \PYG{n}{connectionProfile} \PYG{p}{=} \PYG{n}{NetworkInformation}\PYG{p}{.}\PYG{n}{GetInternetConnectionProfile}\PYG{p}{();}

            \PYG{k+kt}{string} \PYG{n}{data} \PYG{p}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{connectionProfile} \PYG{p}{!=} \PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{Debug}\PYG{p}{.}\PYG{n}{WriteLine}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}[NETWORK]: \PYGZdq{}}\PYG{p}{+}\PYG{n}{connectionProfile}\PYG{p}{.}\PYG{n}{GetNetworkConnectivityLevel}\PYG{p}{().}\PYG{n}{ToString}\PYG{p}{());}

                \PYG{n}{IEnumerable}\PYG{p}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{\PYGZgt{}} \PYG{n}{enumerable} \PYG{p}{=} \PYG{n}{connectionProfile}\PYG{p}{.}\PYG{n}{GetNetworkNames}\PYG{p}{().}\PYG{n}{AsEnumerable}\PYG{p}{();}
                \PYG{k}{foreach} \PYG{p}{(}\PYG{k+kt}{string} \PYG{n}{v} \PYG{k}{in} \PYG{n}{enumerable}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                    \PYG{k}{if} \PYG{p}{(}\PYG{n}{data}\PYG{p}{.}\PYG{n}{Equals}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{))} \PYG{p}{\PYGZob{}}
                        \PYG{n}{data} \PYG{p}{+=} \PYG{n}{v}\PYG{p}{;}
                    \PYG{p}{\PYGZcb{}}
                    \PYG{k}{else} \PYG{p}{\PYGZob{}}
                        \PYG{n}{data} \PYG{p}{+=} \PYG{l+s}{\PYGZdq{} | \PYGZdq{}} \PYG{p}{+} \PYG{n}{v}\PYG{p}{;}
                    \PYG{p}{\PYGZcb{}}
                \PYG{p}{\PYGZcb{}}
                \PYG{k}{if} \PYG{p}{(}\PYG{n}{data}\PYG{p}{.}\PYG{n}{Equals}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{))} \PYG{p}{\PYGZob{}}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{ssid} \PYG{p}{=} \PYG{k}{null}\PYG{p}{;}
                \PYG{p}{\PYGZcb{}}
                \PYG{k}{else} \PYG{p}{\PYGZob{}}
                    \PYG{k}{this}\PYG{p}{.}\PYG{n}{ssid} \PYG{p}{=} \PYG{n}{data}\PYG{p}{;}
                \PYG{p}{\PYGZcb{}}
            \PYG{p}{\PYGZcb{}}
            \PYG{k}{else} \PYG{p}{\PYGZob{}}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{ssid} \PYG{p}{=} \PYG{k}{null}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k+kt}{string} \PYG{n+nf}{getSSID}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{return} \PYG{k}{this}\PYG{p}{.}\PYG{n}{ssid}\PYG{p}{;}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{void} \PYG{n+nf}{dequeueUri}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{n}{Uri} \PYG{n}{uri}\PYG{p}{;}
            \PYG{k}{try} \PYG{p}{\PYGZob{}}
                \PYG{n}{uri} \PYG{p}{=} \PYG{k}{this}\PYG{p}{.}\PYG{n}{uriQueue}\PYG{p}{.}\PYG{n}{Dequeue}\PYG{p}{();}
            \PYG{p}{\PYGZcb{}} \PYG{k}{catch} \PYG{p}{(}\PYG{n}{Exception} \PYG{n}{e}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{n}{uri} \PYG{p}{=} \PYG{k}{null}\PYG{p}{;}
            \PYG{p}{\PYGZcb{}}

            \PYG{k}{if} \PYG{p}{(}\PYG{n}{uri}\PYG{p}{!=}\PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{Navigate}\PYG{p}{(}\PYG{n}{uri}\PYG{p}{);}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{async} \PYG{n}{Task}\PYG{p}{\PYGZlt{}}\PYG{k+kt}{string}\PYG{p}{\PYGZgt{}} \PYG{n}{EscapeJSONString}\PYG{p}{(}\PYG{k+kt}{string} \PYG{n}{unescaped}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{DataContractJsonSerializer} \PYG{n}{serializer} \PYG{p}{=} \PYG{k}{new} \PYG{n}{DataContractJsonSerializer}\PYG{p}{(}\PYG{k}{typeof}\PYG{p}{(}\PYG{n}{LoginInformation}\PYG{p}{));}
            \PYG{n}{MemoryStream} \PYG{n}{stream} \PYG{p}{=} \PYG{k}{new} \PYG{n}{MemoryStream}\PYG{p}{();} \PYG{p}{;}
            \PYG{n}{serializer}\PYG{p}{.}\PYG{n}{WriteObject}\PYG{p}{(}\PYG{n}{stream}\PYG{p}{,} \PYG{n}{unescaped}\PYG{p}{);}
            \PYG{n}{stream}\PYG{p}{.}\PYG{n}{Position} \PYG{p}{=} \PYG{l+m}{0}\PYG{p}{;}
            \PYG{k}{return} \PYG{n+nf}{await} \PYG{p}{(}\PYG{k}{new} \PYG{n}{StreamReader}\PYG{p}{(}\PYG{n}{stream}\PYG{p}{)).}\PYG{n}{ReadToEndAsync}\PYG{p}{();}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{queueUri}\PYG{p}{(}\PYG{n}{Uri} \PYG{n}{uri}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{uriQueue}\PYG{p}{.}\PYG{n}{Enqueue}\PYG{p}{(}\PYG{n}{uri}\PYG{p}{);}
            \PYG{k}{if} \PYG{p}{(}\PYG{k}{this}\PYG{p}{.}\PYG{n}{uriQueue}\PYG{p}{.}\PYG{n}{Count} \PYG{p}{==} \PYG{l+m}{1}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{startTimer}\PYG{p}{();}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{void} \PYG{n+nf}{startTimer}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{timer} \PYG{p}{=} \PYG{n}{ThreadPoolTimer}\PYG{p}{.}\PYG{n}{CreateTimer}\PYG{p}{((}\PYG{n}{source}\PYG{p}{)} \PYG{p}{=\PYGZgt{}} \PYG{p}{\PYGZob{}}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{timerCallback}\PYG{p}{();}
            \PYG{p}{\PYGZcb{},} \PYG{n}{TimeSpan}\PYG{p}{.}\PYG{n}{FromSeconds}\PYG{p}{(}\PYG{l+m}{1}\PYG{p}{));}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{void} \PYG{n+nf}{displayMessage}\PYG{p}{(}\PYG{k+kt}{string} \PYG{n}{message}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{n}{ApplicationView}\PYG{p}{.}\PYG{n}{GetForCurrentView}\PYG{p}{().}\PYG{n}{TryResizeView}\PYG{p}{(}\PYG{k}{new} \PYG{n}{Size} \PYG{p}{\PYGZob{}} \PYG{n}{Width} \PYG{p}{=} \PYG{l+m}{600}\PYG{p}{,} \PYG{n}{Height} \PYG{p}{=} \PYG{l+m}{150} \PYG{p}{\PYGZcb{});}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{textBlock}\PYG{p}{.}\PYG{n}{Text} \PYG{p}{=} \PYG{n}{message}\PYG{p}{;}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{Margin} \PYG{p}{=} \PYG{k}{new} \PYG{n}{Thickness}\PYG{p}{(}\PYG{l+m}{0}\PYG{p}{,} \PYG{k+kt}{int}\PYG{p}{.}\PYG{n}{MaxValue}\PYG{p}{,} \PYG{l+m}{0}\PYG{p}{,} \PYG{k+kt}{int}\PYG{p}{.}\PYG{n}{MinValue}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{private} \PYG{k}{void} \PYG{n+nf}{displayWebView}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{n}{ApplicationView}\PYG{p}{.}\PYG{n}{GetForCurrentView}\PYG{p}{().}\PYG{n}{TryResizeView}\PYG{p}{(}\PYG{k}{new} \PYG{n}{Size} \PYG{p}{\PYGZob{}} \PYG{n}{Width} \PYG{p}{=} \PYG{l+m}{800}\PYG{p}{,} \PYG{n}{Height} \PYG{p}{=} \PYG{l+m}{500} \PYG{p}{\PYGZcb{});}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{textBlock}\PYG{p}{.}\PYG{n}{Text} \PYG{p}{=} \PYG{l+s}{\PYGZdq{}\PYGZdq{}}\PYG{p}{;}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{webView}\PYG{p}{.}\PYG{n}{Margin} \PYG{p}{=} \PYG{k}{new} \PYG{n}{Thickness}\PYG{p}{(}\PYG{l+m}{0}\PYG{p}{,} \PYG{l+m}{0}\PYG{p}{,} \PYG{l+m}{0}\PYG{p}{,} \PYG{l+m}{0}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{timeout}\PYG{p}{()} \PYG{p}{\PYGZob{}}
            \PYG{k}{this}\PYG{p}{.}\PYG{n}{displayMessage}\PYG{p}{(}\PYG{l+s}{\PYGZdq{}Operation timeout.\PYGZbs{}r\PYGZbs{}nCheck your network connection.\PYGZdq{}}\PYG{p}{);}
        \PYG{p}{\PYGZcb{}}

        \PYG{k}{public} \PYG{k}{void} \PYG{n+nf}{removeLoginInformation}\PYG{p}{(}\PYG{k+kt}{string} \PYG{n}{ssid}\PYG{p}{)} \PYG{p}{\PYGZob{}}
            \PYG{k}{if} \PYG{p}{(}\PYG{n}{ssid} \PYG{p}{!=} \PYG{k}{null}\PYG{p}{)} \PYG{p}{\PYGZob{}}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{storage}\PYG{p}{.}\PYG{n}{getLoginInfo}\PYG{p}{().}\PYG{n}{removeBySSID}\PYG{p}{(}\PYG{n}{ssid}\PYG{p}{);}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{storage}\PYG{p}{.}\PYG{n}{saveData}\PYG{p}{();}
                \PYG{k}{this}\PYG{p}{.}\PYG{n}{refreshList}\PYG{p}{();}
            \PYG{p}{\PYGZcb{}}
        \PYG{p}{\PYGZcb{}}
    \PYG{p}{\PYGZcb{}}
\PYG{p}{\PYGZcb{}}
\end{Verbatim}
